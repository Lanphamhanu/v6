name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download
      run: |
        Write-Host "Downloading ngrok..."
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Write-Host "Download complete."
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Create Tunnel
      run: |
        Write-Host "Creating ngrok tunnel..."
        $startTime = Get-Date
        .\ngrok\ngrok.exe tcp 3389

        do {
          Start-Sleep -Seconds 60  # Wait for 1 minute
          $currentTime = Get-Date
          $elapsedTime = $currentTime - $startTime
          Write-Host "Elapsed time: $($elapsedTime.TotalMinutes) minutes"
        }
        while ($elapsedTime.TotalMinutes -lt 5)
        Write-Host "Recreating ngrok tunnel..."
        .\ngrok\ngrok.exe tcp 3389
